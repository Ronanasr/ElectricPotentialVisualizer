# Electric Potential Visualizer

## Description
This Python script computes and visualizes the electric potential field generated by two point charges in a 2D plane. It uses `numpy` for efficient calculations and `matplotlib` for creating a contour plot of the potential field. The plot also marks the positions of the charges and includes a colorbar for better interpretation.

## Features
- Calculates the electric potential due to two point charges using Coulomb's law.
- Generates a contour plot of the potential field with 70 levels for detailed visualization.
- Marks the positions of the charges on the plot.
- Saves the output as a high-quality PNG image.
- Uses vectorized computations for improved performance.

## Requirements
- Python 3.x
- Required libraries:
  - `numpy`
  - `matplotlib`

## Installation
1. Clone the repository:
   ```bash
   git clone https://github.com/your-username/your-repo-name.git
   ```
2. Navigate to the project directory:
   ```bash
   cd your-repo-name
   ```
3. Install the required libraries:
   ```bash
   pip install numpy matplotlib
   ```

## Usage
1. Save the script as `electric_potential.py`.
2. Run the script:
   ```bash
   python electric_potential.py
   ```
3. The script will generate a contour plot showing:
   - The electric potential field (contour lines with color gradient).
   - The positions of the two charges (red dots).
   - A colorbar indicating potential values.
4. The plot is automatically saved as `electric_potential_plot.png` in the project directory.

## Example Output
The following is an example of the generated contour plot for two charges with magnitudes 20C and 30C, separated by 3 meters in a 10x10 meter domain:

![Example Plot](electric_potential_plot.png) *(Note: You can add a screenshot of the plot by saving it and uploading it to the repository.)*

## Code Explanation
- **Function**: `compute_electric_potential(L, s, k, q1, q2, x1, x2, y1, y2, N_p)`
  - Takes parameters such as domain size (`L`), charge separation (`s`), Coulomb's constant (`k`), charge magnitudes (`q1`, `q2`), charge positions (`x1`, `x2`, `y1`, `y2`), and grid resolution (`N_p`).
  - Computes the electric potential using vectorized operations for efficiency.
  - Creates a contour plot with 70 levels, labels, a colorbar, and charge markers.
- **Key Parameters**:
  - `L = 10.0`: Size of the square domain (m).
  - `s = 3.0`: Separation between the charges (m).
  - `k = 5.0`: Simplified Coulomb's constant.
  - `q1 = 20.0`, `q2 = 30.0`: Magnitudes of the charges (C).
  - `N_p = 175`: Number of grid points per axis for resolution.

## Contributing
Contributions are welcome! Please follow these steps:
1. Fork the repository.
2. Create a new branch (`git checkout -b feature-branch`).
3. Make your changes and commit (`git commit -m 'Add new feature'`).
4. Push to the branch (`git push origin feature-branch`).
5. Create a pull request.

## License
This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.

## Contact
For questions or feedback, feel free to open an issue on GitHub or contact [your-email@example.com](mailto:your-email@example.com).